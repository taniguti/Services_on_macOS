#!/bin/bash

vpn_config="/Library/Preferences/SystemConfiguration/com.apple.RemoteAccessServers.plist"
plist_file="/Library/LaunchDaemons/vpn.ppp.l2tp.plist"
service_domain="system/vpn.ppp.l2tp"
iam=`basename $0`
pathtome=""

subcmd=$1
isHelp=`echo $2 | tr [:upper:] [:lower:]`
shift
args=$@

function showhelp(){
    cat << _HELP

Configuration:
    $iam [show-config|show]                : Show current vpn configuration.
    $iam [show-presharedkey|show-psk]      : Show preshared key. 
    $iam [set-presharedkey|set-psk] -c 'new_presharedkey' : Set new preshared key.
    $iam [show-client-address-range|show-car] : Show IP address range for VPN clients
    $iam [set-client-address-range|set-car] -s x.x.x.x -e x.x.x.y :  Set IP address range for VPN clients

Control:
    $iam start   : Start VPN service
    $iam stop    : Stop VPN service
    $iam [status|fullstatus]  : Show status of VPN service.
    $iam restart : Restart VPN service
    $iam reload  : Reload configuration

Setup/Migrate:
    $iam migrate : Migrate VPN service from macOS Server to macOS. $iam helps your VPN Service instaed of serveradmin.
    $iam init    : Setup VPN service for macOS initially.

_HELP
}

function chkcond(){
    :
}

if [ ${subcmd}x = x ]; then $subcmd=help ; fi
if [ ${isHelp}x = helpx ]; then args='-h'; fi
case $subcmd in
    show-confing | show )
    ;;
    show-presharedkey | show-psk)
        "${pathtome}/vpnd-presharedkey" ${args:-'-s'}
    ;;
    set-presharedkey | set-psk)
        "${pathtome}/vpnd-presharedkey" ${args:-'-h'}
    ;;
    show-client-address-range | show-car )
        "${pathtome}/vpnd-car" ${args:-'-s'}
    ;;
    set-client-address-range | set-car )
        "${pathtome}/vpnd-car" ${args:-'-h'}
    ;;
    show-dns )
        vpnd-dns ${args:-'-s'}
    ;;
    set-dns )
        vpnd-dns ${args:-'-h'}
    ;;
    start )
        launchctl kickstart -p $service_domain
    ;;
    stop )
        launchctl disable $service_domain
    ;;
    status )
        launchctl print $service_domain | awk '$1 == "state" {print $3}'
    ;;
    fullstatus )
        launchctl print $service_domain
    ;; 
    restart )
        launchctl kickstart -k $service_domain
    ;;
    relaod )
        launchctl kill HUP $service_domain
    ;;
    migrate )
        migrate_from_macOS_Server $args
    ;;
    init)
        setup_vpnd $args
    ;;
    *)
        showhelp
    ;;
esac
