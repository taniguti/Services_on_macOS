#!/bin/bash

function _readlink(){
    f=`basename "$1"`
    d=`cd $(dirname "$1"); pwd`
    if [ -L "${d}/${f}" ]; then
        r="`readlink -n \"${d}/${f}\"`"
        _readlink "$r"
    else
        echo "${d}/${f}"
    fi
}

function showhelp(){
    cat << _HELP

Configuration:
    $iam [show-config|show]      : Show current vpn configuration.
    $iam [presharedkey|psk]      : Configure preshared key. 
    $iam [client-address-range|car] : Configure IP address range for VPN clients

Control:
    $iam start   : Start VPN service
    $iam stop    : Stop VPN service
    $iam [status|fullstatus]  : Show status of VPN service.
    $iam restart : Restart VPN service
    $iam reload  : Reload configuration

Setup/Migrate/Deploy:
    $iam migrate : Migrate VPN service from macOS Server to macOS. $iam helps your VPN Service instaed of serveradmin.
    $iam init    : Setup VPN service for macOS initially.
    $iam profile : Export configuration profile for VPN Service

_HELP
}

function chkcond(){
    isRoot=yes
    isConfigured=yes
    if [ `whoami` != root ]; then isRoot=no ; fi
    if [ ! -f "$plist_file" ]; then isConfigured=no ; fi
    if [ ! -f "$vpn_config" ]; then isConfigured=no ; fi
}

function chkconfig(){
    chk=$1
    if [ ${chk:-no} = 'init' ]; then
        if [ $isConfigured = "yes" ]; then
            echo "Configured already."
            exit 1
        fi
    fi
    if [ $isConfigured = "no" ]; then
        echo "Not configured yet."
        echo "For configure vpn service, type \"sudo $iam [init|migrate]\""
        exit 1
    fi
}

function chkroot(){
    if [ $isRoot != "yes" ]; then
        echo "Use me with 'sudo'"
        echo "sudo $iam $subcmd"
        exit 1
    fi
}

vpn_config="/Library/Preferences/SystemConfiguration/com.apple.RemoteAccessServers.plist"
plist_file="/Library/LaunchDaemons/vpn.ppp.l2tp.plist"
service_domain="system/vpn.ppp.l2tp"
iam=`basename "$0"`
fullpath_to_me=`_readlink "$0"`
pathtome="`dirname \"$fullpath_to_me\"`"

subcmd=$1
isHelp=`echo $2 | tr [:upper:] [:lower:]`
shift
args=$@

chkcond
if [ ${subcmd}x = x ]; then $subcmd=help ; fi
if [ ${isHelp}x = helpx ]; then args='-h'; fi
case $subcmd in
    show-confing | show )
        chkconfig
        ;;
    presharedkey | psk | client-address-range | car | dns )
        if [ x"$args" != x'-h' ]; then
            chkconfig
            chkroot
        fi
        "${pathtome}/${subcmd}" ${args:-'-h'}
        ;;
    start )
        chkconfig
        chkroot
        launchctl kickstart -p $service_domain
        ;;
    stop )
        chkconfig
        chkroot
        launchctl disable $service_domain
        ;;
    status )
        chkconfig
        launchctl print $service_domain | awk '$1 == "state" {print $3}'
        ;;
    fullstatus )
        chkconfig
        launchctl print $service_domain
        ;; 
    restart )
        chkconfig
        chkroot
        launchctl kickstart -k $service_domain
        ;;
    relaod )
        chkconfig
        chkroot
        launchctl kill HUP $service_domain
        ;;
    migrate )
        chkconfig init
        chkroot
        if [ ! -f "$vpn_config" ]; then
            echo "Not found ${vpn_config}."
            echo "Execute initial setup."
            "${pathtome}/setup-vpnd" -i
        fi
        "${pathtome}/setup-vpnd" ${args:-'-m'}
        ;;
    init )
        chkconfig init
        chkroot
        if [ -f "$vpn_config" ]; then
            echo "Found ${vpn_config}."
            echo "Try migrate..."
            "${pathtome}/setup-vpnd" -m
        fi
        "${pathtome}/setup-vpnd" ${args:-'-i'}
        ;;
    profile )
        chkconfig
        chkroot
        "${pathtome}/vpn-profile" ${args:-'-h'}
        ;;
    * )
        showhelp
        ;;
esac

# vpn_config="/Library/Preferences/SystemConfiguration/com.apple.RemoteAccessServers.plist"
# plist_file="/Library/LaunchDaemons/vpn.ppp.l2tp.plist"
