#!/bin/bash

iam=`basename "$0"`
opt='-U'
KEYCHAIN='/Library/Keychains/System.keychain'
SNAME='com.apple.net.racoon'
PNAME="com.apple.RemoteAccessServers.plist"
CDIR="/Library/Preferences/SystemConfiguration"

function _readlink(){
    f=`basename "$1"`
    d=`cd $(dirname "$1"); pwd`
    if [ -L "${d}/${f}" ]; then
        r="`readlink -n \"${d}/${f}\"`"
        _readlink "$r"
    else
        echo "${d}/${f}"
    fi
}

function show_help(){
    cat <<_HELP

    $iam -s: Show preshared key for VPN service.
    $iam -c <preshared_key>: Replace preshared key with new one. Set new key if with '-n'

_HELP
}

function check(){
    isFile=yes
    if [ -f "${CDIR}/${PNAME}" ]; then
        ENCRYPT=`PlistBuddy -c "print  Servers:com.apple.ppp.l2tp:IPSec:SharedSecretEncryption" "${CDIR}/${PNAME}"`
        PSK_ACCOUNT=`/usr/libexec/PlistBuddy -c "print  Servers:com.apple.ppp.l2tp:IPSec:SharedSecret" "${CDIR}/${PNAME}"`
    else
        isFile=no
    fi
}

if [ $# = 0 ]; then 
    show_help
    exit 1
fi

if [ `whoami` != root ]; then
    echo "Use me with 'sudo'"
    show_help
    exit 1
fi

fullpath_to_me=`_readlink "$0"`
pathtome="`dirname \"$fullpath_to_me\"`"

while getopts c:dhs sw
do
    case $sw in
        c)
            check
            security add-generic-password $opt -s $SNAME -A -a $PSK_ACCOUNT -w "$NEW_PSK" "$KEYCHAIN"
            ;;
        d)
            mode=delete
            ;;
        s)
            check
            if [ "${ENCRYPT}X" != "KeychainX" ]; then
                echo "Unknown Shared Secret Encryption" >&2
                exit 1
            fi
            if [ "${PSK_ACCOUNT}X" = X ]; then
                echo "Failed to get Preshared Key" >&2
                exit 1
            fi
            security find-generic-password -w -a $PSK_ACCOUNT "$KEYCHAIN"
            ;;
        *)
            show_help
            exit 0
            ;;
    esac
done
